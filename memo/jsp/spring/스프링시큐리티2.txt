AccessDeniedHandler 인터페이스 구현
- 접근제한이 된 경우 다양한 처리를 위한 인터페이스
- 접근제한이 되었을때 쿠키나 세션에 특정한 작업을 하거나 HttpServletResponse에
특정한 헤더를 추가하는 경우는 직접구현하는 방식을 사용한다.

org.green.security 패키지생성
CustomAccessDeniedHandler 클래스 생성(AccessDeniedHandler 인터페이스 상속)





커스텀 로그인 페이지
<security:form-login/> = 라이브러리에 기본제공하는 기본 로그인 폼
<security:form-login login-page="/customLogin"/> = 내가 만든 커스텀 로그인 폼으로 이동하게 할 수 있음.

- Controller에 커스텀로그인 url에 해당하는 메소드를 추가(GetMapping으로만 가능)
*에러메시지, 로그아웃 메시지를 

- 해당 jsp페이지 생성

- 로그인 성공과 특정한 동작을 하도록 제어 하고싶은 경우
AuthenticationSuccessHandler 인터페이스를 구현해서 설정
권한을 체크해서 해당 권한을 가졌으면 해당 url로 이동하게 설정
CustomLoginSuccessHandler(AuthenticationSuccessHandler상속)클래스 생성

인증/권한을 위한 테이블 설계
create table tbl_member(
	userid varchar2(50) not null primary key,
	userpw varchar2(100) not null,
	username varchar2(100) not null,
	regdate date default sysdate,
	updatedate date default sysdate
);
/
create table tbl_member_auth(
	userid varchar2(50) not null,
	auth varchar2(50) not null,
	constraint fk_member_auth foreign key(userid) references tbl_member(userid)
);


BCryptPasswordEncoder클래스를 이용한 패스워드 보호(암호화)

bcrypty 패스워드를 저장하는 용도로 설계됨
해시함수로 특정 문자열을 암호화 하고 체크하는쪽에서
암호화된 패스워드가 가능한 패스워드인지 확인만 하고 다시 원문으로 되돌리기는 불가

