el - Expession Language
표현 언어
변수의 값을 출력할때 사용하는 스크립트 언어

스코프 객체
pageScope
기본표현(변수에 값을 담고 표현식에서 출력)
<%
	String name = (String)request.getAttribute("name");
	String id = request.getParameter("userId");
%>
<%= name%>
el표현(바로 출력)
${requestScope.name}
${param.userId}

객체 표현 방식 3가지
page->request->session->applicaion 순으로 찾음
${pageScope.scopeValue }
${pageScope["scopeValue"]}
${pageScope['scopeValue'] }
* 속성명에 특수 기호나 한글이 있을때는 대괄호만 사용 할 수 있음!!

4가지 영역에 접근하거나 사용자의 요청을 처리하기위한
내장 객체를 제공함
-pageScope : pageContext 내장객체와 같이 page영역에 저장된 속성값을 읽음
-requestScope : request 내장객체와 같이 request영역에 저장된 속성값을 읽음
-sessionScope : 위와 같음
-applicationScope : ㅇㅇ


2.form 값 처리하기
(일반방식)request.getParameter()로 폼에 입력값을 받을 수 있음
(el방식)
param과 paramValues를 사용
1)param : request.getParameter("매개변수명")
2)paramValues : request.getParameterValues("매개변수명")
매개변수의 값을 문자열 배열로 받음

3.객체 전달하기

4.쿠키, http 헤더, 컨텍스트 초기화 매개변수 출력하기

컨텍스트 초기화 매개변수 만들기(web.xml에 추가)
<context-param>
	<param-name>username</param-name>
	<param-value>green</param-value>
</context-param>

cookie : 쿠키를 읽을 때 사용
header : request.hetHeader()와 동일하게 헤더값을 읽을 때 사용
pageContext : jsp의 pageContext내장 객체와 동일한 역할을 함.
initParam : web.xml에 설정한 컨텍스트 초기화 매개변수를 읽을 때 사용


메소드 호출
<%
	MyClass myclass = new MyClass();
	pageContext.setAttribute("a", myclass);
%>
${a.helloprint()}
${MyClass.isNumber("123")}