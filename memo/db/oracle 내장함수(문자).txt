
1.upper(문자열이름)
2.lower
3.initcap << 첫글자만 대문자 나머지는 소문자로 변환 후 반환

4.length(문자열이름)
4-1.lengthb << 선택한 열의 바이트 수를 반환(한글은 1문자당 2byte)

//오라클에서 인덱스는 1부터 시작함
5.substr(문자열데이터, 시작위치, 추출위치)
substr(문자열데이터, 시작위치)

6.instr(문자데이터, 찾을문자, 시작위치에서 몇번째 문자인지) 1,2 번째 인자는 필수입력
찾는문자의 인덱스 반환
>>select * from emp
    where instr(ename, 'S') > 0 // 이름에 S가 포함된 컬럼은 인덱스가 0보다 크므로 > 0 을 줘야 값이 나옴

7.replace(문자데이터, 찾는문자, 바꿀문자)
select '010-1234-4567' as replace_before,
replace('010-1234-4567', '-', ' ') as replace_1,
replace('010-1234-4567', '-') as replace_2
from dual;

REPLACE_BEFORE             REPLACE_1                  REPLACE_2
-------------------------- -------------------------- ----------------------
010-1234-4567              010 1234 4567              01012344567

8.LPAD(문자데이터, 자리수(범위), 빈공간에 대체할 문자) 왼쪽에서 n번째 만큼 특정 문자로 채움
9.RPAD 오른쪽에서 채움
>>select 'Oracle',
  2  lpad('Oracle', 10, '#') as lpad_1,
  3  lpad('Oracle', 20, '^') as lpad_2,
  4  rpad('Oracle',10) as rpad_1,
  5  rpad('Oracle',20,'$') as rpad_2
  6  from dual;

'ORACLE'     LPAD_1               LPAD_2                                   RPAD_1               RPAD_2
------------ -------------------- ---------------------------------------- -------------------- ----------------------------------------
Oracle       ####Oracle           ^^^^^^^^^^^^^^Oracle          Oracle      	          Oracle$$$$$$$$$$$$$$

10.concat(a,b) 2개의 문자열 데이터를 하나의 문자열로 연결해줌


11.trim 문자열 내에서 특정 문자를 지우기 위해 사용(공백지우기도 가능)
select trim('_' from '___oracle___') from dual;
>> 언더바(_) 가 지워짐